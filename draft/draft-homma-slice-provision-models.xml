<?xml version="1.0" encoding="US-ASCII"?>
<!--


<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
-->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [ 
<!-- One method to get references from the online citation libraries. 
     There has to be one entity for each item to be referenced.  
     An alternate method (rfc include) is described in the references. --> 
<!--
<!ENTITY RFC7348 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7348.xml">
<!ENTITY RFC7665 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7665.xml"> 
<!ENTITY RFC8300 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8300.xml">
-->
<!ENTITY RFC8453 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8453.xml">
<!--
<!ENTITY I-D.draft-ietf-sfc-hierarchical SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-sfc-hierarchical-05.xml">
<!ENTITY I-D.draft-netslices-usecases SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-netslices-usecases-02.xml"> 
<!ENTITY I-D.draft-qiang-coms-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-architecture-00.xml">
<!ENTITY I-D.draft-qiang-coms-netslicing-information-model SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-netslicing-information-model-01.xml">
-->
<!ENTITY I-D.draft-defoy-coms-subnet-interconnection SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-defoy-coms-subnet-interconnection-01.xml"> 
<!--
<!ENTITY I-D.draft-qiang-coms-netslicing-information-model SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-netslicing-information-model-01.xml">
<!ENTITY I-D.draft-ietf-spring-segment-routing-mpls SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-spring-segment-routing-mpls-11.xml">
<!ENTITY I-D.draft-ietf-6man-segment-routing-header SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-6man-segment-routing-header-08.xml">
-->
<!ENTITY I-D.draft-homma-nfvrg-slice-gateway SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-homma-nfvrg-slice-gateway-00.xml">
<!ENTITY I-D.draft-dong-teas-enhanced-vpn SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-dong-teas-enhanced-vpn-03.xml">
]> 
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?> 
<!-- used by XSLT processors --> 
<!-- For a complete list and description of processing instructions (PIs),  
      please see http://xml.resource.org/authoring/README.html. --> 
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use. 
     (Here they are set differently than their defaults in xml2rfc v1.32) --> 
<?rfc strict="yes" ?> 
<!-- give errors regarding ID-nits and DTD validation --> 
<!-- control the table of contents (ToC) --> 
<?rfc toc="yes"?> 
<!-- generate a ToC --> 
<?rfc tocdepth="4"?> 
<!-- the number of levels of subsections in ToC. default: 3 --> 
<!-- control references --> 
<?rfc symrefs="yes"?> 
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] --> 
<?rfc sortrefs="yes" ?> 
<!-- sort the reference entries alphabetically --> 
<!-- control vertical white space  
     (using these PIs as follows is recommended by the RFC Editor) --> 
<?rfc compact="yes" ?> 
<!-- do not start each main section on a new page --> 
<?rfc subcompact="no" ?> 
<!-- keep one blank line between list items --> 
<!-- end of list of popular I-D processing instructions --> 
<rfc category="info" docName="draft-homma-slice-provision-models-00">
  <!-- ***** FRONT MATTER ***** --> 




  <front>
    <title abbrev="draft-homma-slice-provision-models">
    Network Slice Provision Models
    </title>

    <author fullname="Shunsuke Homma" initials="S." surname="Homma">
      <organization>NTT</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country>Japan</country>
        </postal>
        <email>shunsuke.homma.fp@hco.ntt.co.jp</email>
      </address>
    </author>

    <author fullname="Hidetaka Nishihara" initials="H." surname="Nishihara">
      <organization>NTT</organization>

      <address>
        <postal>
          <street/>

          <city/>

          <region/>

          <code/>

          <country>Japan</country>
        </postal>
        <email>nishihara.hidetaka@lab.ntt.co.jp</email>
      </address>
    </author>

    <author fullname="Takuya Miyasaka" initials="T." surname="Miyasaka">
      <organization>KDDI Research</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Japan</country>
        </postal>
        <email>ta-miyasaka@kddi-research.jp</email>
      </address>
    </author>


    <author fullname="Alex Galis" initials="A." surname="Galis">
      <organization>University College London</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>UK</country>
        </postal>
        <email>a.galis@ucl.ac.uk</email>
      </address>
    </author>

    <author fullname="Vishnu Ram OV" initials="V." surname="Ram OV">
      <organization>Independent Research Consultant India</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>India</country>
        </postal>
        <email>vishnu.u@ieee.org</email>
      </address>
    </author>

    <author fullname="Diego R. Lopez" initials="D." surname="Lopez">
      <organization>Telefonica I+D</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Spain</country>
        </postal>
        <email>diego.r.lopez@telefonica.com</email>
      </address>
    </author>


    <author fullname="Luis M. Contreras-Murillo" initials="L." surname="Contreras-Murillo">
      <organization>Telefonica I+D</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Spain</country>
        </postal>
        <email>luismiguel.contrerasmurillo@telefonica.com</email>
      </address>
    </author>

    <author fullname="Jose A. Ordonez-Lucena" initials="J." surname="Ordonez-Lucena">
      <organization>Telefonica I+D</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Spain</country>
        </postal>
        <email>joseantonio.ordonezlucena@telefonica.com</email>
      </address>
    </author>

     <author fullname="Pedro Martinez-Julia" initials="P." surname="Martinez-Julia">
      <organization>NICT</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Japan</country>
        </postal>
        <email>pedro@nict.go.jp</email>
      </address>
    </author>

    <author fullname="Li Qiang" initials="L." surname="Qiang">
      <organization>Huawei Technologies</organization>
      
      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>China</country>
        </postal>
        <email> qiangli3@huawei.com</email>
      </address>
    </author>


    <author fullname="Reza Rokui" initials="R." surname="Rokui">
      <organization>Nokia</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Canada</country>
        </postal>
        <email>reza.rokui@nokia.com</email>
      </address>
    </author>

    <author fullname="Laurent Ciavaglia" initials="L." surname="Ciavaglia">
      <organization>Nokia</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>France</country>
        </postal>
        <email>Laurent.ciavaglia@nokia.com</email>
      </address>
    </author>

    <author fullname="Xavier de Foy" initials="X." surname="de Foy">
      <organization abbrev="InterDigital Inc.">InterDigital Inc.</organization>
      
      <address>
        <postal>
          <street/>
          <city/>
          <country>Canada</country>
        </postal>
        <email>Xavier.Defoy@InterDigital.com</email>
      </address>
    </author>


    <date/>

    <area>Individual</area>

    <workgroup>Individual</workgroup>
    
    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>
      Network slicing is an approach to provide separate virtual network based on service requirements. It's a 
      fundamental concept of the 5G, and the architecture and specification is under standardization in several 
      organizations. However, the definitions and scopes of network slicing vary to some degree from one organization 
      to another. This document provides classification of provisioning models of network slice for clarifying the differences 
      on the definitions and scopes.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction and Motivation">
      <t>
      Network slicing is an approach to provide separate virtual networks depending on requirements of each service. 
      Network slicing receives attention due to factors such as diversity of services and devices, and it is also a 
      fundamental concept of the 5G for applying networks to such various types of requirements.
      </t>
      
      <t>
      In addition, network slicing is expected to enable a business model to provide dedicated logical networks to 3rd parties or vertical customers
      on-demand, called NSaaS (Network Slice as a Service). For such usage, in network slicing, provision of networks 
      able to guarantee communication characteristics end to end would be required. However, the definitions are not harmonized 
      over several SDOs (Standards Developing Organizations).
      </t>
      
      <t>
      This document clarifies provision patterns of network slice, and provides the definitions and scope of network slicing which are 
      available over several organizations. Furthermore, the deliverables would be help for evaluating applicabilities of existing technologies/solutions 
      to network slicing.
      </t>

    <section anchor="Roles-NS-Provisioning" title="Differentiated Roles in Network Slice Provisioning">

      <t>
      The widespread of system and network virtualization technologies has conducted
      to new business opportunities, enlarging the offer of IT resources in the form
      of Network Slices (NS). As a consequence, there is a clear differentiation
      between the owner of physical resources, the infrastructure operator,
      and the intermediary that conforms and delivers network services to the final
      customers, the Virtual Network Operator (VNO).
      </t>

      <t>
      VNOs aim to exploit the virtualized infrastructures to deliver new and improved
      services to their customers. However, current NS techniques offer poor support
      for VNOs to control their resources. It has been considered that the infrastructure operator is
      responsible of the reliability of the NS elements but several situations
      advocate the VNO to gain a finer control on its resources.  For instance,
      dynamic events, such as the identification of new requirements or the
      detection of incidents within the virtual system, might urge a VNO to quickly
      reform its virtual infrastructure and resource allocation. However, the
      interfaces offered by current virtualization platforms do not offer the
      necessary functions for VNOs to perform the elastic adaptations they require
      to tackle with their dynamic operation environments.
      </t>
    </section>

    <section title="High-level Problem Statement">  
      <t>
      Beyond their heterogeneity, which can be resolved by software adapters, NS
      platforms do not offer common methods and functions, so it is
      difficult for the virtual network controllers used by the VNOs to actually
      manage and control virtual resources instantiated on different platforms, not
      even considering different infrastructure operators. Therefore, it is necessary to reach a common
      definition of the functions that should be offered by underlying platforms to
      enable such overlay controllers with the possibility of allocate and deallocate
      resources dynamically and get monitoring data about them.
      </t>

      <t>
      Such common methods should be offered by all underlying controllers, regardless
      of being network-oriented (e.g., ODL, ONOS, Ryu) or computing-oriented (e.g., 
      OpenStack, OpenNebula, Eucalyptus). Furthermore, it is also important for those 
      platforms to offer some "PUSH" function to report resource state, avoiding the
      need for the VNO's controller to "POLL" for such data. A starting point to get
      proper notifications within current REST APIs could be to consider the protocol
      proposed by the <xref target="WEBPUSH-WG"/>.
      </t>

      <t>
      Finally, in order to establish a proper order and allow the coexistence and
      collaboration of different systems, a common ontology regarding network and
      system virtualization should be defined and agreed, so different and
      heterogeneous systems can understand each other without requiring to rely on
      specific adaptation mechanisms that might break with any update on any side of
      the relation.
      </t>
    </section>

    </section>


    <section title="Definition of Terms">
      <t>
      This section lists definitions and terms related to network slicing. This document refers terms and view points 
      on network slicing in some SDOs, such as 3GPP(<xref target="TS.23.501-3GPP"/>, <xref target="TS.28.530-3GPP"/>,  and 
      <xref target="TS.28.801-3GPP"/>),  NGMN (<xref target="NGMN-5G-White-Paper"/>), and MEF white paper.  
      However the scope of this document is not network slicing which is mobile specific but one for general networks, and 
      thus some of definitions in this document may be different from ones of those documents.
      </t>
      
      <t>
      <list style="hanging">
      <t hangText="Network Slicing:">
      Network slicing indicates a technology, an approach, or a concept to create logical separate networks in support of 
      services, depending on several requirements, on the same physical resources. This is possible by 
      combinations of several network technologies.
      </t>
      
      <t hangText="Network Slice (NS):">
      An NS is a logical separate network that provides specific network capabilities and characteristics. In 3GPP definitions, 
      an NS includes both data plane and control plane resources/functions. Meanwhile, in MEF definitions, a set of control 
      and management functionalities is provided as an NS independently of data plane resources. Such NS for control 
      and management of data plane resources is called OCM (Orchestration, Control, and Management) slice. An OCM slice 
      manages one or more data plane NSs, called resource slices.
      </t>

      
      <t hangText="Network Slice Instance (NSI):">
      An NSI is a logical network instance composed with required infrastructure resources, including networking (WAN), 
      computing (NFVI) resources,  and some include additional network service functions such as firewall or load-balancer. 
      It is composed of one or more Network Slice Subnet Instances. 
      </t>

      <t hangText="Network Slice Subnet:">
      A Network Slice Subnet is a representation of a set of required resources. It is composed and managed as 
      a group of network elements.
      </t>

      <t hangText="Network Slice Subnet Instance (NSSI):">
      An NSSI is a partial logical network instance represented as a network slicce instance. It is a minimul unit managed 
      or provided as a network slice. One or more NSSI structure an NSI or an E2E-NSI.
      </t>
      
      
      <t hangText="End-to-End Network Slice Instance (E2E-NSI):">
      An E2E-NSI is a virtual network connecting among end points. It is composed of one or multiple NSSIs. This term is 
      original of this document and is used when it should be emphasized that the target NSI provides connectivity  from 
      end to end. As an example, for providing an E2E-NSI on the 3GPP 5G network, combining three types of NSIs: RAN-, 
      TRN-, and CN-NSIs would be required.  
      </t>

      <t hangText="Transport(TRN)-NSSI:"> 
      A set of connections between various network functions (VNF or PNF) with deterministic SLAs.  
      They can be implemented (aka realized) with various technologies (e.g. IP, Optics, FN, Microwave) and various transport  
      (e.g. RSVP, Segment routing, ODU, OCH etc). The overview of NSI composed with TRN-NSSI is shown in <xref target="app-1"/>. 
      </t> 
 
      <t hangText="RAN-NSSI:"> 
      Regardless of RAN deployment (e.g. distributed-RAN, Centralized-RAN or Cloud-RAN, a RAN-NSSI creates a dedicate and logical  
      resource on RAN for each NSI which are completely. The overview of NSI composed with RAN-NSSI is shown in <xref target="app-1"/>. 
      </t> 
 
      <t hangText="Core(CN)-NSSI:"> 
      Regardless of Core deployment, a CN-NSI creates a dedicate and logical resource on Core network for each NSI which are completely. 
      The overview of NSI composed with CN-NSSI is shown in <xref target="app-1"/>. 
      </t>

      
      <t hangText="Network Slice as a Service (NSaaS):">
      An NSaaS is a service delivery model in which a third-party provider or a vertical customer hosts NSIs 
      and makes them available to customers. In this model, there mainly two roles: NS provider and NS tenant.
      </t>
      
      <t hangText="Network Slice Provider (NS Provider):">
      An NS provider is a person or group that designs and instantiates one or more NSIs/NSSIs, and provides them to 
      NS tenants. In some cases, an NS provider is an infrastructure operator simultaneously. This includes NSI, NSSI, and 
      E2E-NSI providers.
      </t>

      <t hangText="Network Slice Tenant (NS Tenant):">
      An NS tenant is a person or group that rents and occupies NSIs from NS providers.
      </t>

      <t hangText="Network Slice Stakeholder (NS Stakeholder):">
      An NS stakeholder is an actor in network slicing, and has roles of either NS provider or tenant.
      </t>

      <t hangText="Infrastructure Operator:">
      An infrastructure operator is an organization who manages infrastructure networks or data centers for running NSIs. 
      In the most of cases, infrastructure operators are initial NS providers on NSaaS. Also, some of them may be NS tenants 
      simultaneously. 
      </t>

      <t hangText="Vertical Customer:">
      A vertical customer is a organization who provides some communicating services with using NSIs on NSaaS model. In 
      many cases, a vertical customer become the final NS tenant on NSaaS. For example, video gaming companies or 
      vehicle vendors will possibly be vertical customers.
      </t>

      <t hangText="Virtual Network Operator (VNO):">
      A VNO is a person or group that operates virtual networks composed with resources or NSSIs rent from infrastructure 
      operators and provides such virtual networks as NSIs to vertical customers who are final NS tenants. In some cases, 
      infrastructure operators have this role in addition to operating their own infrastructure simultaneously.
      </t>
<!--
      <t hangText="Network Slice Broker (NS Broker):">
      An NS broker is a person or group that rents resources or NSSIs from infrastructure provider and sells E2E-NSIs 
      created with such resources or NSSIs.
      </t>
-->

<!--
      <t hangText="Network Slice Type (NS Type):">
      An NS type is a definition identifying characters or attributes on a NS. NS types can be defined by each NS provider. 
      As examples, <xref target="TS.28.530-3GPP"/> describes three NS types: URLLC, eMBB, and mIoT.
      </t>

      <t hangText="URLLC (Ultra-Reliable and Low Latency Communication):">
      NS for URLLC provides low-latency and High reliable communication, and it is expected to be used for services which 
      require real-time control such as connected vehicles.
      </t>
          
      <t hangText="eMBB (enhanced Mobile BroadBand):">
      An NS for eMBB provides high-capacity bandwidth communication, and it is expected to be used for services which consume 
      high volumes of traffic such as VR/AR and high quality video streaming(e.g., 4K/8K).
      </t>
          
      <t hangText="mIoT (massive IoT):">
      mIoT NS provides connectivity for massive number of IoT devices such as smart meters.
      </t>
-->
      <t hangText="Domain:">
      A domain is a group of a network and devices administrated under a policy-based common set of rules and procedures.
      </t>
      
      <t hangText="Resource:">
      A resource is an element used to create virtual networks. There are several types of resources, i.e., 
      connectivity, computing and storage. The details are described <xref target="NS-Rsrc"/>
      </t>
      
      
      <t hangText="Virtual Network:">
      A virtual network is a network running a number of virtual network functions. 
      </t>
      
      <t hangText="Virtual Network Function (VNF):"> 
      A virtual network function (VNF) is a network function whose functional 
      software is decoupled from hardware. One or more VNFs run as different software and 
      processes on top of industry-standard high-volume servers, switches and storage, or cloud computing 
      infrastructure. They are capable of implementing network functions traditionally implemented via custom 
      hardware appliances and middleboxes (e.g., router, NAT, firewall, load balancer, etc.).
      </t>

      <t hangText="Network Operation System:">
      A network operation system is an entity or a group of entities for operating network nodes and functions as 
      compositions of infrastructure network. For example, OSS/BSS, orchestrator, and EMS are considered to be network operation 
      systems. 
      </t>

      </list>
      </t>
    </section>

    
    <section title="General Requirements for Network Slicing">
      <t>
      On network slice operations, capabilities for dynamic instantiation, change, and deletion should be required because 
      an NSI is established based on received orders from tenants in NSaaS. From this aspect, some mechanisms to design a network 
      based on service requirements and to convert those to concrete configurations based on the design would be required. 
      </t>

      <t>
      In addition, each NS has to maintain concrete communication characteristics end to end, and resource reservations 
      on data plane and isolation among NSIs would be required. Isolation is a concept to prevent the reduction of 
      communication quality caused by disturbance from other NSs, and it may have some levels of enforcement, 
      such as hard or soft isolations. In some cases, for providing appropriate communication between client and server, 
      it would be allowed for NS tenants to put their applications as contents server on NSIs by using computing resources.
      </t>
      
      <t>
      The required agility of slice operation and granularity of end to end communication quality requested can vary depending on 
      provision model.
      </t>

    </section>

    <section anchor="NS-Structure" title="Network Slice Structure">
      <t>
      This section describes resources used for structuring NSs and the basic structure of E2E-NS.
      </t>

      <section anchor="NS-Rsrc" title="Resources for Structuring Network Slices">
        <t>
        A network slice is structured as combinations of the resources it uses. Such resources are mainly categorized into 
        three classes: network/WAN, computing/NFVI, and functionality resources. Variations of each resources are described below. 
        (Note that the lists are not exhaustive.)
        </t>
      
        <t>
        <list style="hanging">
        <t hangText="Network(WAN) Resources:">
          <list style="symbols">
          <t>Connectivity:
            <list style="symbols">
              <t>(v)Link
              <list style="symbols">
                <t>Bandwidth per link/session</t>
                <t>Connected area/end points</t>
                <t>Forwarding route/path (e.g., for traffic engineering, redundancy)</t>
                <t>Communication Priority (e.g., QoS class)</t> 
                <t>Range of jitter amount</t>           
              </list>
              </t>
          
              <t>Interface of vNode
              <list style="symbols">
                <t>QoS setting (e.g., Queue size, DSCP remarking, PIR/CIR)</t>
                <t>Filter setting</t>
              </list>
              </t>
        
              <t>
              vRouter/vSwitch (# Treated as a set of (v)links and interfaces of vNodes.)
              </t>
            </list>
          </t>

          <t>Multicast support</t>

          <t>Encryption support</t>

          <t>Authentication support</t>
          
          <t>Metadata conveyance (e.g., subscriber ID)</t>          
        
          <t>Protocols for slice data plane:
            <list style="symbols">
              <t>VLAN</t>
              <t>IPoE (IPv4 or IPv6)</t>
              <t>MAP-E</t>
              <t>DS-Lite</t>
              <t>PPPoE</t>
              <t>L2TP</t>
              <t>GRE</t>
              <t>MPLS</t>
              <t>VxLAN</t>
              <t>Geneve</t>
              <t>GTP-U</t>
              <t>Segment Routing MPLS</t>
              <t>Segment Routing IPv6</t>
              <t>NSH</t>
              <t>Other</t>
            </list>
          </t>        
          
          </list>
  
        </t> 
      
        <t hangText="Computing(NFVI) Resources:">
          <list style="symbols">
          <t>(v)CPU core</t>
          <t>Storage</t>
          <t>Memory</t>
          <t>Disk</t>
          <t>vNIC</t>
          <t>Connectivity to VNF instances</t>
<!--      <t>Image</t> -->  
          <t>Virtual Deployment Unit:
            <list style="symbols">
            <t>Virtual Machine (VM)</t>
            <t>container</t>
            <t>micro kernel</t>
            </list>
          </t>
<!--
          <t>VNF Infrastructure Type (e.g., open source, product of vender#A, ..., etc.)</t>
-->
          <t>Resource Deployment Location (i.e., edge DC, central DC, public cloud, ..., etc.)</t>

          </list>
        </t>
      
        <t hangText="Functionality Resources:">
          <list style="symbols">
          
          <t>Image:
            <list style="symbols">
              <t>Data Plane(DP) NF:
                <list style="symbols">
                  <t>GateWay(GW) function:
                    <list style="symbols">
                      <t>Access Point Type (e.g., for radio, Wi-Fi, and fixed accesses)</t>
                      <t>Slice Selection Setting</t>
                      <t>Terminate protocol</t>
                      <t>Authentication</t>
                    </list>
                  </t>
                  <t>Security Appliance:
                    <list style="symbols">
                      <t>IPS (Intrusion Prevention System)</t>
                      <t>IDS (Intrusion Detection System)</t>
                      <t>WAF (Web Application Firewall)</t>
                    </list>
                  </t>
                  <t>DPI</t>
                  <t>Load Balancer</t>
                  <t>TCP Accelerator</t>
                  <t>Video Optimizer</t>
                  <t>Parental Control</t>
                  <t>Mobile DP functions (Ref. 3GPP 5GS)
                    <list style="symboles">
                      <t>gNB</t>
                      <t>UPF</t>
                      <t>Uplink Classifier</t>
                    </list>
                  </t>
                </list>
              </t>
          
              <t>Control Plane(CP) NF:
                <list style="symbols">
                  <t>DHCP
                    <list style="symbols">
                      <t>Fixed IP address allocation</t>
                      <t>Dynamic IP address allocation</t>
                      <t>The number of registered devices</t>
                    </list>
                  </t>
                  <t>DNS</t>
                  <t>VoIP (SBC, SIP server)</t>
                  <t>Mobile CP function (Ref. 3GPP 5GS)
                    <list style="symbols">
                      <t>AMF (Access and Mobility management Function)</t>
                      <t>SMF (Session Management Function)</t>
                      <t>PCF (Policy Control Function)</t>
                      <t>UDM (Unified Data Management)</t>
                      <t>NEF (Network Exposure Function)</t>
                    </list>
                  </t>
                 </list>
              </t>
            </list>
          </t>
<!--
          <t>Vertial Deployment Unit
            <list style="symbols">
              <t>Virtual Machine (VM)</t>
              <t>Container</t>
              <t>Micro kernel</t>
            </list>
          </t>
-->
          <t>Provided VNF Type (e.g., open source, product of vender#A, ..., etc.)</t>
          <t>Function location (e.g., edge DC, central DC, Public cloud, etc.)</t>
        </list>
        </t>          



      </list>
      </t>

      <t>
      In terms of security or usability for NS tenants, some abstraction on resource information would be required, 
      however both setting parameters of underlay infrastructure and abstracted information may coexist in these lists.
      </t>

      <t>
      For abstraction of parameters of underlay networks,  some additional protocols or functions (like <xref target="RFC8453"/> ) 
      would be required. Moreover, for providing strict communication qualities, combinations of some technologies may be 
      useful (ref. <xref target="I-D.dong-teas-enhanced-vpn"/>).
      </t> 

      </section>
      

      <section anchor="Basic-NS-Structure" title="Basic Network Slice Structure">
        <t>
        An E2E-NSI is constructed by stitching NSSIs instantiated on each participating domain. This includes the 
        simplest case of a single NSSI as an E2E NS. Domain types where some NSSIs are established are described below:
        <list style="symbols">
          <t>Fixed access network</t>
          <t>Mobile access network</t>
          <t>Transport network</t>
          <t>Fixed core network</t>
          <t>Mobile core network</t>
          <t>Data center (DC)
            <list style="symbols">
              <t>Edge DC</t>
              <t>Central DC</t>
            </list>
          </t>
          <t>Private network
            <list style="symbols">
              <t>Enterprise</t>
              <t>Factory</t>
              <t>Utilities</t>
              <t>Farming</t>
              <t>Home/SOHO</t>
              <t>Other</t>
            </list>
          </t>
        </list>
        </t>
<!--
        <t>Note: RAN in the 3GPP 5GS is NS aware, but no specific slicing support is currently defined in RAN.</t>
-->      
        <t>
        <xref target="Overview-NS-Structure"/> describes the overview of this structure. Resources in each domain (e.g., access, 
        core networks, and DC) are handled by management entities and  constitute an NSSI. An E2E-NSI is established by stitching 
        these NSSIs. Ways to stitch NS-subnets are described in <xref target="I-D.defoy-coms-subnet-interconnection"/> and 
        <xref target="I-D.homma-nfvrg-slice-gateway"/>.   
        </t>

<figure anchor="Overview-NS-Structure" title="Overview of NS Structure">
  <artwork align="center"><![CDATA[
  

   ___________________________________________
  /                                          /
 /__________________________________________/
                    E2E-NSI
      A              A              A
      |              |              |

   ____________   ___________   ______________
  /           /  /          /  /             /
 /___________/  /__________/  /_____________/
    NSSI#1         NSSI#2         NSSI#3
      A              A              A
      |              |              |

  o---o         [PNF]              /----[VM]
     / `--.     /  `----.         /----[VM]
 o---o-----o...o---------o...o---o----[VM]
 NW Rsrc#1     NW Rsrc+PNF      NW+CMP Rsrcs
     A               A              A
     |               |              |

 ,--------.     ,--------.    ,-----------.
/ Access   \   / Core     \  /             \
| Network  |   | Network  |  |  DC Domain  |
\ Domain   /   \ Domain   /  \             /
 `--------'     `--------'    `-----------'
     
*Legends
 NW Rsrc : Network Resource
 CMP Rsrc: Computing Resource
  o   : virtual/physical node structuring NSI
  --  : virtual/physical link structuring NSI
 [PNF]: Physical Network Function Appliance on NSI
 [VM] : Virtual Machine Instance on NSI

  ]]></artwork>
</figure>
    

      <t>
      Although it is shown that an NSSI belongs to just only one E2E-NSI in <xref target="Overview-NS-Structure"/>, it may be allowed that 
      multiple E2E-NSIs share an NSSI. Some resources may belong to multiple NSSI as well.
      </t>

      <t>
      In addition, structure on composition of NSI may be recursive. In other words, even though <xref target="Overview-NS-Structure"/> 
      shows a case where NSSIs compose directly an E2E-NSI, in some cases, NSSIs compose an NSI which is a part of an E2E-NSI. The overview 
      is shown in <xref target="NS-Recursive"/>. In this figure, NSI#4 is composed of NSSI#1 and NSSI#2, and it structures E2E-NSI#5 with NSSI#3.
      </t>

<figure anchor="NS-Recursive" title="Overview of NS recursive structure">
  <artwork align="center"><![CDATA[
  
   ___________________________________________
  /                                          /
 /__________________________________________/
                  E2E-NSI#5
               A                    A
               |                    |
   ___________________________      |
  /                          /      |
 /__________________________/       |
   NSI#4 (= NSSI#1 + NSSI#2)        |
      A              A              |
      |              |              |
   ____________   ___________   _____________
  /           /  /          /  /            /
 /___________/  /__________/  /____________/
    NSSI#1         NSSI#2         NSSI#3

  ]]></artwork>
</figure>

      </section>
      
      <section anchor="Stakeholders-on-NS" title="Stakeholders in the Structuring Network Slices">
<!--
        <t>
        On a basic NS structure, an E2E-NSI is established based on order of either following Stakeholders:
        <list style="symbols">
          <t>One of NSSI providers</t>
          <t>E2E-NSI provider</t>
          <t>Others (e.g., external coordinator or broker)</t>
        </list>
        </t>
-->
        <t>
        Potential stakeholders in network slicing are described below:
        <list style="hanging">
          <t hangText="o NSSI provider:">
          infrastructure operator
          </t>
          
          <t hangText="o Intermediate-NSI provider:">
          infrastructure operator, VNO
          </t>

          <t hangText="o E2E-NSI provider:">
          infrastructure operator, VNO, service provider
          </t>

          <t hangText="o NS tenant:">
          infrastructure operator, VNO, service provider, enterprise, mass user
          </t>
          <t hangText="o End customer:">
          enterprise, mass user, etc.
          </t>
        </list>
        </t>
      </section>

    </section>

    <section anchor="NS-Creation-Variations" title="Variations of Network Slice Creation">
      <t>
      NSs can be classified according to their creation pattern into two types: ready-made(RM) NS, custom-made(CM), and semi-custom-made(sCM) NS. 
      This section describes the features of these types.
      </t>
      
      <section anchor="RM-NS" title="Ready-made Network Slice">
        <t>
        RM-NS is an NS creation pattern in which an infrastructure operator decides service requirements by itself, and established based on the
        requirements in advance. NS tenants select one of RM-NSs whose features are closer to their requirements.  
        </t>
        
        <t>
        This model doesn't need immediacy on designing of NSI and enables to mitigate the difficulty of implementation compared with other models. 
        </t> 
        
<!--    As examples of usages of RM-NSs, 
        the following three types communication is advocated in 3GPP (Ref. <xref target="TS.28.530-3GPP"/>). The attribute defining 
        the NS-types are defined in the annex K in <xref target="TS.28.541-3GPP"/>.
        <list style="symbols">
        <t>URLLC</t>
        <t>eMBB</t>
        <t>mIoT</t>
        </list>

        <list style="hanging">
          <t hangText="URLLC (Ultra-Reliable and Low Latency Communication):">
          NS for URLLC provides low-latency and High reliable communication, and it is expected to be used for services which 
          require real-time control such as connected vehicles.
          </t>
          
          <t hangText="eMBB (enhanced Mobile BroadBand):">
          NS for eMBB provides high-capacity bandwidth communication, and it is expected to be used for services which consume 
          high volumes of traffic such as VR/AR and high quality video streaming(e.g., 4K/8K).
          </t>
          
          <t hangText="mIoT (massive IoT):">
          mIoT NS provides connectivity for massive number of IoT devices such as smart meters.
          </t>
        </list>
-->

      </section>
      
      <section anchor="CM-NS" title="Custom-made Network Slice">
        <t>
        CM-NS is an NS creation pattern in which an NS is established based on an order from a tenant and is provided to it. As examples of usage of CM-NS, 
        an enterprise builds and operates a virtual private network for connecting several bases, or OTT (Over The Top) or other industrial 
        service providers create NSs based on their own requirements and use them as a part of their own services (e.g., connected vehicles/drones, online video games, 
        or remote surgery). 
        </t>
        
        <t>
        In this model, network operation system would be required to have incorporate intelligence for designing 
        appropriate NSs on-demand.
        </t>
      </section>

      <section anchor="sCM-NS" title="semi-Custom-made Network Slice">
        <t>
        sCM-NS is a derivation of a CM-NS. In sCM-NS, an NS provider designs the outline of NSs in advance, and a tenant 
        tunes an NS with deciding some parameters or applications run on resources. For example, an infrastructure operator designs 
        a logical network presenting connectivity, and tenants install their own applications on servers running on the logical network. 
        </t>
      </section>

    </section>
 
    <section anchor="NS-Provision-Model" title="Network Slice Provision Models">
      <t>
      This document classifis NS provision models into three categories defined in the following section. The capabilities which NS tenants 
      can have on management of NSs would vary depending on the selected provision model. 
      </t>
      
      <section title="Three Provision Models">
        <t>
        The provision models are categorized into three models: 
        SaaS (Software as a Service), PaaS (Platform as a Service), IaaS (Infrastructure as a Service) like models as below. 
        <list style="hanging">
          <t hangText="SaaS-like Model:">
          In this model, an NS is  provider designs NS templates in advance, and a tenant selects and uses one which fulfills 
          most its requirement among the templates. The specifications of NSs are abstracted to KPIs as networks and servers and shown 
          to tenants. In short, detailed parameters of infrastructure network are hidden from tenants. 
          </t>
       
          <t hangText="PaaS-like Model:">
          In this model, a tenant makes its request, including connected area, path routes, the KPIs, and included service functions, and a NS provider
          designs an NS template and instantiate an NS based on the request dynamically. The configurable values would vary depending on the policy 
          of each NS provider. 
          </t>
        
          <t hangText="IaaS-like Model:">
          In this model, a tenant designs its own NS templates and instantiates NSs by indicating concrete resources to infrastructure operators. In other words, 
          infrastructure operators provide just their resources, and NSs are coordinated by the tenant.
          </t>
        </list>
        </t>
        
        <t>
        An example of mapping of each NS provision model is shown in <xref target="Mapping-NS-Provision-Model"/>.
        </t>

<figure anchor="Mapping-NS-Provision-Model" title="Mapping of NS provision models">
  <artwork align="center"><![CDATA[

                                         manage
                    [NS Tenant] ---------------------------+
                                                           |
                                                           |
. . . . . . . . . . . . . . . . . . . . . . . .            |
*Service Layer                                             |
                                     .--.                  |
 .------.                           (    )-.               |
| Area#A |<==== Connectivity ====> .' [APL] '     SaaS-like|
 `------' [BW:100Mbps, Delay<10ms](           )  <---------+
 .------.                          (  [APL] -'             |
| Area#B |<==== Connectivity ====>  '-(     )              |
 `------' [BW:100Mbps, Delay<10ms]     '---'               |
                                 Virtual Private           |
                                      Cloud                |
. . . . . . . . . . . . . . . . . . . . . . . .            |
*NS Layer                                                  |
           __________________________________              |
          /                                 /              |
         / [AP]----o                       /      PaaS-like|
        /         / `--.     /---[VM]     /      <---------+
       /  [AP]---o-----o--[FW]--[VM]     /                 |
      /_________________________________/                  |
                       NSI                                 |
. . . . . . . . . . . . . . . . . . . . . . . .            |
*Infra Layer                                               |
                                                           |
                                                           |
           [AP]----o          /---[SV]                     |
                  / `--.     /---[SV]             IaaS-like|
          [AP]---o-----o--[FW]--[SV]             <---------+
                  .---'    /---[SV]                          
         [AP]----'                                           

*Legends
  o  : virtual/physical node
  -- : virtual/physical link
  [AP] : Access point
  [APL]: Application owned by NS Tenant
  [FW] : Firewall Function
  [VM] : Virtual Machine Instance on Sever
  [SV] : Server as Infrastructure


  ]]></artwork>
</figure>

        <t>
        In some cases, NSIs provided based on IaaS- or PaaS-like models are coordinated to a form of SaaS-like model by an NS broker , and 
        the NS broker or by the tenant, becoming a NS provider in a recursive manner. For example, a vertical customer sends its 
        high-level requirements to an NS broker create an appropriate NSI 
        with resources provided by infrastructure operators.
        </t>
      </section>

          
      <section anchor='configurable-parameters' title="Configurable Parameters/Attributes for NS">
        <t>
        In the NS creating proceedure, configuration parameters would be decided based on requirements 
        which the intended service has. Such service requirements are expressible in the following attribute values.
          <list style="symbols">
            <t>Requrirements for Network Resource
             <list style="symbols">
              <t>bandwidth</t>
              <t>latency</t>
              <t>jitter</t>
              <t>packet loss rate</t>
              <t>reliability (e.g., MTBF, MTTF)</t>
             </list>
            </t>
<!--
            <t>Requirements for Computing Resources
              <list style="symbols">
                <t>throughput</t>
                <t>data strage size</t>
                <t>processing delay</t>
                <t>availability</t>
              </list>
            </t>
-->          
            <t>Requirements for Functionalities Resources
              <list style="symbols">
                <t>function type (e.g., security, parental control)</t>
                <t>throughput</t>
                <t>availability</t>
              </list>
            </t>
          </list>
        </t>

        <t>
        Configurable parameters of components in underlay infrastructure will vary depending on the implementation
        and structure. Controlled resource types are described in <xref target="NS-Rsrc"/>. 
        </t>
      </section>

      <section title="Capability of NS Tenant on each Provision Model">
      <t>
      Capability of NS tenants on NS management would vary depending on the NS provision model. This section 
      describes clarification about such capability in each model.
      </t>

        <section title="Capability in SaaS-like Model">
          <t>
          In SaaS-like Model, an NS is presented for a tenant with attributes values 
          listed in <xref target="configurable-parameters"?>. In other words, an NS tenant never know 
          the concrete configurations of components in underlay infrastructure. 
          </t>

          <t>
          An NS tenant choose value from te range presented by the NS provider in each attribute. The NS 
          provider creates or changes a NS by configuraing components in underlay infrastructures based 
          on the decided attribute values.
          </t>

          <t>
          In terms of telemetry for assurance of service qualities on a NS, a tenant can obtain telemetry 
          information with unit of NSI, and never know ones of underlay components structuring the NS.
          </t>
        </section>

        <section title="Capability in PaaS-like Model">
          <t>
          In PaaS-like model, an NS is represented with NF nodes and their connectivities. An NS tenant can indicate 
          locations  and functionalities of NF nodes, and decide attribute values of connectivities. An NS provider creates or
          changes an NSI by configuring underlay nodes and links depending on the indicated information from tenant.
          An NS tenant is also able to deploy its own NF as software with provided computing resources.
          </t>

          <t>
          In terms of telemetry, an NS tenant can obtain telemetry information of NF nodes and connectivities structuring 
          an NS in addition to whole of NSI.
          </t>
        </section>

        <section title="Capability in IaaS-like Model">
          <t>
          In IaaS-like Model, an NS is represented with configurations of (virtual) nodes and (virtual) links connecting the nodes.
          An NS tenant is able to configure nodes and links in underlay infrastructure. In short, an NS tenant directly design detailed 
          NS and manages it. In addition, an NS tenant inserts its own functions or applications in the NS with using 
          computing resources.
          </t>

          <t>
          In terms of telemetry, an NS tenant can obtain telemetry information of nodes and links in addition of whole 
          of NSI.
          </t>
        </section>

      </section>

    </section>

    <section title="Security Considerations">
      <t>
      In NSaaS, parts of controls of infrastructures are opened to externals, and thus some mechanisms, such as authentication for APIs, to 
      prevent illegal access would be required.
      </t>
    
      <t>Other considerations are TBD</t>
    </section>
    
    <section title="IANA Considerations">
    <t>
    This memo includes no request to IANA.
    </t>
    </section>
    
    <section title="Acknowledgement">
      <t>
      The author would like to thank Toru Okugawa for his kind review and valuable feedback.
      </t>
    </section>
    
    
    
  </middle>

  <!-- ***** BACK MATTER ***** -->

  <back>
    <references title="Informative References">

<!--
    &RFC7348;
    &RFC7665;
    &RFC8300;
-->
   
    &RFC8453;

<!--
    &I-D.draft-netslices-usecases;
    &I-D.draft-qiang-coms-netslicing-information-model;
    &I-D.draft-qiang-coms-architecture;
    &I-D.draft-ietf-spring-segment-routing-mpls;
    &I-D.draft-ietf-6man-segment-routing-header;
    &I-D.draft-ietf-sfc-hierarchical;
-->
    &I-D.draft-defoy-coms-subnet-interconnection;
    &I-D.draft-homma-nfvrg-slice-gateway;
    &I-D.draft-dong-teas-enhanced-vpn;

      
       <reference anchor='TS.23.501-3GPP' target="http://www.3gpp.org/ftp//Specs/archive/23_series/23.501/23501-f30.zip"> 
        <front> 
        <title>3GPP TS 23.501 (V15.3.0): System Architecture for 5G System; Stage 2</title> 
        <author> 
        <organization> 
        3rd Generation Partnership Project (3GPP) 
        </organization> 
        </author> 
        <date month="September" year="2018"/> 
        </front> 
      </reference> 
       
       <reference anchor='TS.28.530-3GPP'  target="http://ftp.3gpp.org//Specs/archive/28_series/28.530/28530-100.zip">
        <front>
        <title>3GPP TS 28.530 (V1.0.0): Management and orchestration of networks and network slicing; Concepts,
               use cases and requirements (work in progress)</title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="June" year="2018"/>
        </front>
      </reference>
      
      <reference anchor='NGMN-5G-White-Paper'
       target='https://www.ngmn.org/5g-white-paper/5g-white-paper.html'>
        <front>
        <title>NGMN 5G White Paper</title>
        <author>
        <organization>NGMN</organization>
        </author>
        <date month="February" year="2015"/>
        </front>
      </reference>

      <reference anchor='TS.28.541-3GPP'  target="http://www.3gpp.org/ftp//Specs/archive/28_series/28.541/28541-f01.zip">
        <front>
        <title>3GPP TS 28.541 (V15.1.0): 5G Netowkr Resource Model (NRM); Stage 2 and stage 3 (Release 15)
        </title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="June" year="2018"/>
        </front>
      </reference>

       <reference anchor='TS.28.801-3GPP'  target="http://www.3gpp.org/ftp//Specs/archive/28_series/28.801/28801-f10.zip">
        <front>
        <title>3GPP TS 28.801 (V15.1.0): Study on Management and Orchestration of Network Slicing for next generation network (Release 15)
        </title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="June" year="2018"/>
        </front>
      </reference>

      <reference anchor='WEBPUSH-WG'
       target='https://datatracker.ietf.org/wg/webpush/about/'>
        <front>
        <title>Web-Based Push Notifications(webpush)</title>
        <author>
        <organization>IETF</organization>
        </author>
        <date/>
        </front>
      </reference>
    </references>

    <!-- Appendix --> 
 
    <section anchor="app-1" 
    		title="NS Structure in the 3GPP 5GS"> 
 
    <t> 
    The overview of structure of NS in the 3GPP 5GS is shown in <xref target="NS-structure-in-5gs"/>. The terms are described  
    in the 3GPP documents (e.g., <xref target="TS.23.501-3GPP"/> and <xref target="TS.28.530-3GPP"/>). 
    </t> 
<figure anchor="NS-structure-in-5gs" title="Overview of Structure of NS in 3GPP 5GS"> 
  <artwork align="center"><![CDATA[ 
     
  <==================          E2E-NSI         =======================> 
               :                 :                  :           :  : 
               :                 :                  :           :  : 
  <======  RAN-NSSI  ======><=TRN-NSSI=><====== CN-NSSI  ======>VL[APL] 
      :        :        :        :         :       :        :   :  : 
      :        :        :        :         :       :        :   :  : 
  RW[NFs ]<=TRN-NSSI=>[NFs ]<=TRN-NSSI=>[NFs ]<=TRN-NSSI=>[NFs ]VL[APL] 
   
   . . . . . . . . . . . . ..          . . . . . . . . . . . . ..  
   .,----.   ,----.   ,----..  ,----.  .,----.   ,----.   ,----..   
UE--|RAN |---| TN |---|RAN |---| TN |---|CN  |---| TN |---|CN  |--[APL] 
   .|NFs |   `----'   |NFs |.  `----'  .|NFs |   `----'   |NFs |. 
   .`----'            `----'.          .`----'            `----'. 
   . . . . . . . . . . . . ..          . . . . . . . . . . . . .. 

  RW         RAN                MBH               CN               DN 
 
*Legends 
 UE: User Equipment 
 RAN: Radio Access Network 
 CN: Core Network 
 DN: Data Network 
 TN: Transport Network 
 MBH: Mobile Backhaul 
 RW: Radio Wave 
 NF: Network Function 
 APL: Application Server 
 
  ]]></artwork> 
</figure> 

</section>
  
  </back>
</rfc>