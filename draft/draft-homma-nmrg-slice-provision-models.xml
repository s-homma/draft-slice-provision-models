<?xml version="1.0" encoding="US-ASCII"?>
<!--


<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
-->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [ 
<!-- One method to get references from the online citation libraries. 
     There has to be one entity for each item to be referenced.  
     An alternate method (rfc include) is described in the references. --> 
<!--
<!ENTITY RFC7348 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7348.xml">
<!ENTITY RFC7665 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7665.xml"> 
<!ENTITY RFC8300 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8300.xml">
<!ENTITY I-D.draft-ietf-sfc-hierarchical SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-sfc-hierarchical-05.xml">
<!ENTITY I-D.draft-netslices-usecases SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-netslices-usecases-02.xml"> 
<!ENTITY I-D.draft-qiang-coms-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-architecture-00.xml">
<!ENTITY I-D.draft-qiang-coms-netslicing-information-model SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-netslicing-information-model-01.xml">
-->
<!ENTITY I-D.draft-defoy-coms-subnet-interconnection SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-defoy-coms-subnet-interconnection-01.xml"> 
<!--
<!ENTITY I-D.draft-qiang-coms-netslicing-information-model SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-netslicing-information-model-01.xml">
<!ENTITY I-D.draft-ietf-spring-segment-routing-mpls SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-spring-segment-routing-mpls-11.xml">
<!ENTITY I-D.draft-ietf-6man-segment-routing-header SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-6man-segment-routing-header-08.xml">
-->
<!ENTITY I-D.draft-homma-nfvrg-slice-gateway SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-homma-nfvrg-slice-gateway-00.xml">
]> 
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?> 
<!-- used by XSLT processors --> 
<!-- For a complete list and description of processing instructions (PIs),  
      please see http://xml.resource.org/authoring/README.html. --> 
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use. 
     (Here they are set differently than their defaults in xml2rfc v1.32) --> 
<?rfc strict="yes" ?> 
<!-- give errors regarding ID-nits and DTD validation --> 
<!-- control the table of contents (ToC) --> 
<?rfc toc="yes"?> 
<!-- generate a ToC --> 
<?rfc tocdepth="4"?> 
<!-- the number of levels of subsections in ToC. default: 3 --> 
<!-- control references --> 
<?rfc symrefs="yes"?> 
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] --> 
<?rfc sortrefs="yes" ?> 
<!-- sort the reference entries alphabetically --> 
<!-- control vertical white space  
     (using these PIs as follows is recommended by the RFC Editor) --> 
<?rfc compact="yes" ?> 
<!-- do not start each main section on a new page --> 
<?rfc subcompact="no" ?> 
<!-- keep one blank line between list items --> 
<!-- end of list of popular I-D processing instructions --> 
<rfc category="info" docName="draft-homma-slice-provision-models-00">
  <!-- ***** FRONT MATTER ***** --> 




  <front>
    <title abbrev="draft-homma-slice-provision-models">
    Network Slice Provision Models
    </title>

    <author fullname="Shunsuke Homma" initials="S." surname="Homma">
      <organization abbrev="NTT">NTT</organization>

      <address>
        <postal>
          <street>3-9-11, Midori-cho</street>

          <city>Musashino-shi</city>

          <region>Tokyo</region>

          <code>180-8585</code>

          <country>Japan</country>
        </postal>
        <email>homma.shunsuke@lab.ntt.co.jp</email>
      </address>
    </author>

    <author fullname="Hidetaka Nishihara" initials="H." surname="Nishihara">
      <organization abbrev="NTT">NTT</organization>

      <address>
        <postal>
          <street>3-9-11, Midori-cho</street>

          <city>Musashino-shi</city>

          <region>Tokyo</region>

          <code>180-8585</code>

          <country>Japan</country>
        </postal>
        <email>nishihara.hidetaka@lab.ntt.co.jp</email>
      </address>
    </author>

    <author fullname="Takuya Miyasaka" initials="T." surname="Miyasaka">
      <organization>KDDI Research</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Japan</country>
        </postal>
        <email>ta-miyasaka@kddi-research.jp</email>
      </address>
    </author>


    <author fullname="Alex Galis" initials="A." surname="Galis">
      <organization>University College London</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>UK</country>
        </postal>
        <email>a.galis@ucl.ac.uk</email>
      </address>
    </author>

    <author fullname="Vishnu Ram" initials="V." surname="Ram">
      <organization>Independent Research Consultant India</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>India</country>
        </postal>
        <email>vishnu.u@ieee.org</email>
      </address>
    </author>

    <author fullname="Diego R. Lopez" initials="D." surname="Lopez">
      <organization>Telefonica I+D</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Spain</country>
        </postal>
        <email>diego.r.lopez@telefonica.com</email>
      </address>
    </author>


    <author fullname="Luis M. Contreras" initials="L." surname="Contreras">
      <organization>Telefonica</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Spain</country>
        </postal>
        <email>luismiguel.contrerasmurillo@telefonica.com</email>
      </address>
    </author>

    <author fullname="Jose Ordonez Lucena" initials="J." surname="Ordnez">
      <organization>Telefonica</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Spain</country>
        </postal>
        <email>joseantonio.ordonezlucena@telefonica.com</email>
      </address>
    </author>



    <date day="7" month="December" year="2018"/>

    <area>Individual</area>

    <workgroup>Individual</workgroup>
    
    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>
      Network slicing is an approach to provide separate virtual network based on service requirements. It's a 
      fundamental concept of the 5G and the architecture and specification is under standardization in several 
      organizations. However, the definitions and scopes of network slicing vary to some degree from one organization 
      to another. This document provides classification of provisioning models of network slice for clarifying the differences 
      on the definitions and scopes.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>
      Network slicing is an approach to provide separate virtual networks depending on requirements of each service. 
      Network slicing receives attention due to factors such as diversity of services and devices, and it is also a 
      fundamental concept of the 5G for applying networks to such various types of requirements.
      </t>
      
      <t>
      In addition, network slicing is expected to enable a business model to provide dedicated networks to 3rd parties 
      on-demand, called NSaaS (Network Slice as a Service). For such usage, in network slicing, provision of networks 
      able to guarantee communication characteristics end to end would be required. However, the definitions are not harmonized 
      over several SDOs (Standards Developing Organizations).
      </t>
      
      <t>
      This document clarifies provision patterns of network slice, and provides the definitions and purposes which are 
      available over several organizations.
      </t>

    </section>


    <section title="Definition of Terms">
      <t>
      This section lists definitions and terms related to network slicing. Although this document refers terms and view points 
      on network slicing in 3GPP documents (<xref target="TS.28.530-3GPP"/> and <xref target="TS.28.801-3GPP"/>) and <xref target="NGMN-5G-White-Paper"/>, 
      some of definitions in this document may be different from ones of those documents.
      </t>
      
      <t>
      <list style="hanging">
      <t hangText="Network Slicing:">
      Network slicing indicates a technology, an approach, or a concept to create logical separate networks in support of 
      services, depending on several requirements, on the same physical resources. This is possible by 
      combinations of several network technologies.
      </t>
      
      <t hangText="Network Slice (NS):">
      An NS is a general name of logical separate networks instantiated on a network infrastructure. It includes 
      Network Slice Instance, Network Slice Subnet Instance, and End-to-End Network Slice Instance.
      </t>
      
      
      <t hangText="Network Slice Instance (NSI):">
      An NSI is a logical network instantiated with network resources such as links, switches an routers, 
      and some include additional network service functions such as firewall or load-balancer. It is composed of 
      one or more Network Slice Subnet Instances. When it provides connectivity from end to end for end users, 
      it is called End-to-End Network Slice Instance. An NSI has an overlay architecture and is independent of 
      the underlay network's topology.
      </t>
      
      <t hangText="Network Slice Subnet Instance (NSSI):">
      An NSSI is a partially virtual network instantiated within a single domain.
      </t>
      
      
      <t hangText="End-to-End Network Slice Instance (E2E-NSI):">
      An E2E-NS is a virtual network connecting among end points. It is composed of one or multiple NSSIs.
      </t>
      
      <t hangText="Network Slice as a Service (NSaaS):">
      An NSaaS is a NS distribution model in which a third-party provider or a vertical customer hosts NSIs 
      and makes them available to customers.
      </t>

      <t hangText="Infrastructure Operator:">
      An infrastructure operator is an organization who manages infrastructure networks or data centers for running NSIs.
      </t>

      <t hangText="Vertical Customer:">
      A vertical customer is a service provider providing some communication services with using NSIs on NSaaS model.
      For example, video gaming companies or vehicle vendors will possibly be vertical customers on NSaaS.
      </t>

      <t hangText="NS Stakeholder:">
      An NS stakeholder is an actor in network slicing, and has roles of either NS provider or tenant.
      </t>
      
      <t hangText="Network Slice Provider (NS Provider):">
      An NS provider is a person or group that designs and instantiates one or more NSIs/NSSIs, and provides them to 
      NS tenants. In some cases, an NS provider is an infrastructure operator simultaneously. This includes NSI, NSSI, and 
      E2E-NSI providers.
      </t>

      <t hangText="Network Slice Tenant (NS Tenant):">
      An NS tenant is a person or group that rents and occupies NSIs from NS providers.
      </t>

      <t hangText="Network Slice Type (NS Type):">
      An NS type is a definition identifying characters or attributes on a NS. NS types can be defined by each NS provider. 
      As examples, <xref target="TS.28.530-3GPP"/> describes three NS types: URLLC, eMBB, and mIoT.
      </t>

      <t hangText="URLLC (Ultra-Reliable and Low Latency Communication):">
      NS for URLLC provides low-latency and High reliable communication, and it is expected to be used for services which 
      require real-time control such as connected vehicles.
      </t>
          
      <t hangText="eMBB (enhanced Mobile BroadBand):">
      An NS for eMBB provides high-capacity bandwidth communication, and it is expected to be used for services which consume 
      high volumes of traffic such as VR/AR and high quality video streaming(e.g., 4K/8K).
      </t>
          
      <t hangText="mIoT (massive IoT):">
      mIoT NS provides connectivity for massive number of IoT devices such as smart meters.
      </t>

      <t hangText="Domain:">
      A domain is a group of a network and devices administrated under a policy-based common set of rules and procedures.
      </t>
      
      <t hangText="Resource:">
      A resource is an element used to create virtual networks. There are several types of resources, i.e., 
      connectivity, computing and storage. The details are described <xref target="NS-Rsrc"/>
      </t>
      
      
      <t hangText="Virtual Network:">
      A virtual network is a network running a number of virtual network functions. 
      </t>
      
      <t hangText="Virtual Network Function (VNF):"> 
      A virtual network function (VNF) is a network function whose functional 
      software is decoupled from hardware. One or more virtual machines running different software and 
      processes on top of industry-standard high-volume servers, switches and storage, or cloud computing 
      infrastructure, and capable of implementing network functions traditionally implemented via custom 
      hardware appliances and middleboxes (e.g., router, NAT, firewall, load balancer, etc.)
      </t>

      <t hangText="Network Operation System:">
      A network operation system is an entity or a group of entities for operating network nodes and functions as 
      compositions of infrastructure network.
      </t>

      </list>
      </t>
    </section>

    
    <section title="General Requirements for Network Slicing">
      <t>
      On network slice operations, capabilities for dynamic instantiation, change, and deletion should be required because 
      an NS is established based on received orders from tenants. From this aspect, some mechanisms to design a network 
      based on service requirements and to convert concrete configurations based on the design would be required. 
      </t>
      
      <t>
      In addition, each NS has to maintain concrete communication characteristics end to end, and resource reservations 
      on data plane and isolation among NSs would be required. Isolation is a concept to prevent the reduction of 
      communication quality caused by disturbance from other NSs, and it may have some levels of strength, 
      such as hard or soft isolations. 
      </t>
      
      <t>
      The required agility of slice operation and granularity of communication quality requested can vary depending on 
      provisioning model.
      </t>

    </section>

    <section anchor="NS-Structure" title="Network Slice Structure">
      <t>
      This section describes resources used for structuring NSs and the basic structure of E2E-NS.
      </t>

      <section anchor="NS-Rsrc" title="Resources for Structuring Network Slices">
        <t>
        A network slice is structured as combinations of the resources it uses. Such resources are mainly categorized into 
        three classes: network/WAN, server/NFVI, and functionality resources. Variations of each resources are described below. 
        (Note that the lists are not exhaustive.)
        </t>
      
        <t>
        <list style="hanging">
          <t hangText="Network(WAN) Resources:">
          <list style="symbols">
          <t>
          (v)Link/connectivity:
            <list style="symbols">
              <t>Bandwidth per link/session</t>
              <t>Connected area/end points</t>
              <t>Forwarding route/path (e.g., for traffic engineering, redundancy)</t>
              <t>Communication Priority (e.g., QoS class)</t>
              <t>Multicast support</t>
              <t>Metadata conveyance (e.g., subscriber ID)</t>
              <t>Protocol of slice data plane:
                <list style="symbols">
                  <t>VLAN</t>
                  <t>IPoE (IPv4 or IPv6)</t>
                  <t>MAP-E</t>
                  <t>DS-Lite</t>
                  <t>PPPoE</t>
                  <t>L2TP</t>
                  <t>GRE</t>
                  <t>MPLS</t>
                  <t>VxLAN</t>
                  <t>GTP-U</t>
                  <t>Segment Routing MPLS</t>
                  <t>Segment Routing IPv6</t>
                  <t>Other</t>
                </list>
              </t>
            </list>
          </t>
          
          <t>
          (v)Interface
            <list style="symbols">
              <t>QoS setting (e.g., Queue size, DSCP remarking, PIR/CIR)</t>
              <t>Filter setting</t>
            </list>
          </t>
          
          <t>
          vRouter/vSwitch (# Treated as a set of virtual/physical links and (v)interfaces.)
          </t>
          

        
        </list>
        </t>
      
        <t hangText="Server(NFVI) Resources:">
          <list style="symbols">
          <t>(v)CPU core</t>
          <t>Storage</t>
          <t>Memory</t>
          <t>Disk</t>
          <t>Connectivity (VPC Network)</t>
          <t>Image</t>
          <t>VNF Type
            <list style="symbols">
            <t>VM</t>
            <t>container</t>
            <t>micro kernel</t>
            </list>
          </t>
          <t>VNF Infrastructure Type (e.g., open source, product of vender#A, etc.)</t>
          <t>VNF location (i.e., data center where the VNF deployed)</t>
          </list>
        </t>
      
        <t hangText="Functionality Resources:">
          <list style="symbols">
          <t>Data Plane(DP) NF:
            <list style="symbols">
              <t>
              GateWay(GW) function:
                <list style="symbols">
                  <t>Access Point Type (e.g., for radio, Wi-Fi, and fixed accesses)</t>
                  <t>Slice Selection Setting</t>
                  <t>Terminate protocol</t>
                  <t>Authentication</t>
                </list>
              </t>
              <t>Security Appliance:
              <list style="symbols">
                <t>IPS (Intrusion Prevention System)</t>
                <t>IDS (Intrusion Detection System)</t>
                <t>WAF (Web Application Firewall)</t>
              </list>
              </t>
            <t>DPI</t>
            <t>Load Balancer</t>
            <t>TCP Accelerator</t>
            <t>Video Optimizer</t>
            <t>Parental Control</t>
           </list>
          </t>
          <t>Control Plane(CP) NF:
            <list style="symbols">
              <t>DHCP
                <list style="symbols">
                  <t>Fixed IP address allocation</t>
                  <t>Dynamic IP address allocation</t>
                  <t>The number of registrated devices</t>
               </list>
              </t>
              <t>DNS</t>
              <t>VoIP (SBC, SIP server)</t>
              <t>Mobility Management Functionalities (referring 3GPP 5GS)
                <list style="symbols">
                  <t>AMF (Access and Mobility management Function)</t>
                  <t>SMF (Session Management Function)</t>
                  <t>PCF (Policy Control Function)</t>
                  <t>UDM (Unified Data Management)</t>
                  <t>NEF (Network Exposure Function)</t>
                </list>
              </t>
            </list>
            </t>
        </list>
        </t>
      </list>
      </t>

      <t>
      In terms of security or usability for NS tenants, some abstraction on resource information would be required, 
      however both low infrastructure and abstracted information may coexist in these lists.
      </t>
      </section>
      

      <section anchor="Basic-NS-Structure" title="Basic Network Slice Structure">
        <t>
        An E2E-NS is constructed by stitching NS subnets instantiated on each participating domain. This includes the 
        simplest case of a single NS subnet as an E2E NS. Domain types where some NS-subnets are established are described below:
        <list style="symbols">
          <t>Fixed access network</t>
          <t>Mobile access network</t>
          <t>Transport network</t>
          <t>Fixed core network</t>
          <t>Mobile core network</t>
          <t>Data center (DC)
            <list style="symbols">
              <t>Edge DC</t>
              <t>Central DC</t>
            </list>
          </t>
          <t>Private network
            <list style="symbols">
              <t>Enterprise</t>
              <t>Factory</t>
              <t>Utilities</t>
              <t>Farming</t>
              <t>Home/SOHO</t>
              <t>Other</t>
            </list>
          </t>
        </list>
        </t>

        <t>Note: RAN in the 3GPP 5GS is NS aware, but it is not defined that slicing RAN.</t>
      
        <t>
        <xref target="Overview-NS-Structure"/> describes the overview of this structure. Resources in each domain (e.g., access, 
        core networks, and DC) are handled by management entities and  constitute an NSSI. An E2E-NSI is established by stitching 
        these NSSIs. Ways to stitch NS-subnets are described in <xref target="I-D.defoy-coms-subnet-interconnection"/> and 
        <xref target="I-D.homma-nfvrg-slice-gateway"/>.   
        </t>

<figure anchor="Overview-NS-Structure" title="Overview of NS Structure">
  <artwork align="center"><![CDATA[
  

   ___________________________________________
  /                                          /
 /__________________________________________/
                    E2E-NSI
      A              A              A
      |              |              |

   ____________   ___________   ______________
  /           /  /          /  /             /
 /___________/  /__________/  /_____________/
    NSSI#1         NSSI#2         NSSI#3
      A              A              A
      |              |              |

  o---o         [SF]               /----[SV]
     / `--.     /  `----.         /----[SV]
 o---o-----o...o---------o...o---o----[SV]
 NW Rsrc#1     NW Rsrc+SF      NW+SV Rsrcs
     A               A              A
     |               |              |

 ,--------.     ,--------.    ,-----------.
/ Access   \   / Core     \  /             \
| Network  |   | Network  |  |  DC Domain  |
\ Domain   /   \ Domain   /  \             /
 `--------'     `--------'    `-----------'
     
*Legends
  o  : virtual/physical node structuring NSI
  -- : virtual/physical link structuring NSI
 [SF]: service function on NSI
 [SV]: server on NSI

  ]]></artwork>
</figure>
    

      <t>
      Althoug it is shown that an NSSI belongs to just only one E2E-NSI in <xref target="Overview-NS-Structure"/>, it may be allowed that 
      multple E2E-NSIs share an NSSI. Some resouces may belong to multiple NSSI as well.
      </t>

      <t>
      In addition, structure on composition of NSI may be recursive. In other words, even though <xref target="Overview-NS-Structure"/> 
      shows a case where NSSIs compose directly an E2E-NSI, in some cases, NSSIs compose an NSI which is a part of an E2E-NSI. Such NSI is called 
      middle-NSI in this document. The overview is shown in <xref target="NS-Recursive"/>.
      </t>

<figure anchor="NS-Recursive" title="Overview of NS recursive structure">
  <artwork align="center"><![CDATA[
  
   ___________________________________________
  /                                          /
 /__________________________________________/
                    E2E-NSI
               A                    A
               |                    |
   ___________________________      |
  /                          /      |
 /__________________________/       |
         Middle-NSI#4               |
      A              A              |
      |              |              |
   ____________   ___________   _____________
  /           /  /          /  /            /
 /___________/  /__________/  /____________/
    NSSI#1         NSSI#2         NSSI#3

  ]]></artwork>
</figure>

      </section>
      
      <section anchor="Stakeholders-on-NS" title="Stakeholders in the Structuring Network Slices">
        <t>
        On a basic NS structure, an E2E-NSI is established based on order of either following Stakeholders:
        <list style="symbols">
          <t>One of NSSI providers</t>
          <t>E2E-NSI provider</t>
          <t>Others (e.g., external coordinator or broker)</t>
        </list>
        </t>

        <t>
        Other potential NS stakeholders in network slicing are described below:
        <list style="hanging">
          <t hangText="NSSI provider:">
          infrastructure operator
          </t>
          
          <t hangText="Middle-NSI provider">
          infrastructure operator, coordinator/broker
          </t>

          <t hangText="E2E-NSI provider:">
          infrastructure operator, coordinator/broker, service provider
          </t>

          <t hangText="NS tenant:">
          infrastructure operator, coordinator/broker, service provider, enterprise, mass user
          </t>
          <t hangText="End customer:">
          enterprise, mass user, etc.
          </t>
        </list>
        </t>
      </section>
    </section>

    <section anchor="NS-Types" title="Variations of Network Slice Types">
      <t>
      NSs can be classified according to their provision pattern into tow types: ready-made(RM) NS and custom-made(CM) NS. 
      This section describes the features of these types.
      </t>
      
      <section anchor="RM-NS" title="Ready-made Network Slice">
        <t>
        An RM-NS is a NS which the infrastructure operator decides requirements for assumed services, and established based on them in advance. 
        A tenant selects one of RM-NSs whose features are closer to its requirements. As examples of usages of RM-NSs, 
        the following three types communication is advocated in 3GPP (Ref. <xref target="TS.28.530-3GPP"/>). The attribute defining 
        the NS-types are defined in the annex K in <xref target="TS.28.541-3GPP"/>.
        <list style="symbols">
        <t>URLLC</t>
        <t>eMBB</t>
        <t>mIoT</t>
        </list>
<!--
        <list style="hanging">
          <t hangText="URLLC (Ultra-Reliable and Low Latency Communication):">
          NS for URLLC provides low-latency and High reliable communication, and it is expected to be used for services which 
          require real-time control such as connected vehicles.
          </t>
          
          <t hangText="eMBB (enhanced Mobile BroadBand):">
          NS for eMBB provides high-capacity bandwidth communication, and it is expected to be used for services which consume 
          high volumes of traffic such as VR/AR and high quality video streaming(e.g., 4K/8K).
          </t>
          
          <t hangText="mIoT (massive IoT):">
          mIoT NS provides connectivity for massive number of IoT devices such as smart meters.
          </t>
        </list>
-->
        </t>
      </section>
      
      <section anchor="CM-NS" title="Custom-made Network Slice">
        <t>
        A CM-NS is a NS which is established based on an order from a tenant and provided to it. As examples of usage of CM-NS, 
        an enterprise builds and operates a virtual network for connecting several bases, or OTT (Over The Top) or other industrial 
        service providers can create and use NSs as a part of their own services (e.g., connected vehicles/drones, online video games, 
        or remote surgery) based on thier own requirements. 
        </t>
        
        <t>
        In this model, network operation system would be required to incorperate intelligence into orchestration function(s) for designing 
        appropriate NSs on-demand.
        </t>
      </section>
    </section>
 
    <section anchor="NS-Provision-Model" title="Network Slice Provision Models">
      <t>
      This document classify NS provision models into three categories defined in the following section. The capabilities which NS tenants 
      can have on management of NSs would vary depending on the selected provision model. 
      </t>
      
      <section title="Three Provision Models">
        <t>
        The provision models are categorized into three models: 
        SaaS (Software as a Service), PaaS (Platform as a Service), IaaS (Infrastructure as a Service) like models as below. 
        <list style="hanging">
          <t hangText="SaaS-like Model:">
          In this model, an infrastructure operator designs NS templates in advance, and a tenant selects and uses one which fulfills 
          most its requirement among the templates. The specifications of NSs are abstracted to KPIs as networks and servers and shown 
          to tenants. In short, detailed parameters of infrastructure network are hidden from tenants. RM-NS is categorized into this model.
          </t>
        
          <t hangText="PaaS-like Model:">
          In this model, a tenant makes its request, including connected area, path routes, the KPIs, and included service functions, and infrastructure 
          operator designs a template and instantiate an NS based on the request dynamically. The configurable values would vary depending on the policy 
          of each NS provider. CM-NS is categorized into this model.
          </t>
        
          <t hangText="IaaS-like Model:">
          In this model, a tenant designs and instantiates NSs by indicating concrete resources to infrastructure operators. In other words, 
          infrastructure operators provide just their resources, and NSs are coordinated by the tenant. CM-NS is categorized into this model.
          </t>
        </list>
        </t>
        
        <t>
        An example of mapping of each NS provision model is shown in <xref target="Mapping-NS-Provision-Model"/>.
        </t>

<figure anchor="Mapping-NS-Provision-Model" title="Mapping of NS provision models">
  <artwork align="center"><![CDATA[

                                         manage
                    [NS Tenant] ---------------------------+
                                                           |
                                                           |
. . . . . . . . . . . . . . . . . . . . . . . .            |
*Service Layer                                             |
                                     .--.                  |
 .------.                           (    )-.               |
| Area#A |<==== Connectivity ====> .' [APL] '     SaaS-like|
 `------' [BW:100Mbps, Delay<10ms](           )  <---------+
 .------.                          (  [APL] -'             |
| Area#B |<==== Connectivity ====>  '-(     )              |
 `------' [BW:100Mbps, Delay<10ms]     '---'               |
                                 Virtual Private           |
                                      Cloud                |
. . . . . . . . . . . . . . . . . . . . . . . .            |
*NS Layer                                                  |
           __________________________________              |
          /                                 /              |
         / [AP]----o                       /      PaaS-like|
        /         / `--.     /---[VM]     /      <---------+
       /  [AP]---o-----o--[FW]--[VM]     /                 |
      /_________________________________/                  |
                       NSI                                 |
. . . . . . . . . . . . . . . . . . . . . . . .            |
*Infra Layer                                               |
                                                           |
                                                           |
           [AP]----o          /---[SV]                     |
                  / `--.     /---[SV]             IaaS-like|
          [AP]---o-----o--[FW]--[SV]             <---------+
                  .---'    /---[SV]                          
         [AP]----'                                           

*Legends
  [AP] : Access point
  [APL]: Application owned by NS Tenant
  [FW] : Firewall
  [VM] : Virtual Machine Instance


  ]]></artwork>
</figure>

        <t>
        Note that, in case that each NSSI is provided by different infrastructure provider, provision models on each NSSI composing an E2E-NSI 
        may be different. 
        </t>
      </section>

          
      <section title="Configurable Parameters/Attributes on each Provision Models">
        <t>TBD</t>
      </section>

      <section title="Capability of NS Tenant on each Provision Model">
      <t>TBD</t>
      </section>

    </section>

    <section title="Security Considerations">
      <t>
      In NSaaS, parts of controls of infrastructures are opened to externals, and thus some mechanisms, such as authentication for APIs, to 
      prevent illegal access would be required.
      </t>
    
      <t>Other considerations are TBD</t>
    </section>
    
    <section title="IANA Considerations">
    <t>
    This memo includes no request to IANA.
    </t>
    </section>
    
    <section title="Acknowledgement">
      <t>
      The author would like to thank Toru Okugawa and  Laurent Ciavaglia for their kind review and valuable feedback.
      </t>
    </section>
    
    
    
  </middle>

  <!-- ***** BACK MATTER ***** -->

  <back>
    <references title="Informative References">

<!--
    &RFC7348;
    &RFC7665;
    &RFC8300;
    &I-D.draft-netslices-usecases;
    &I-D.draft-qiang-coms-netslicing-information-model;
    &I-D.draft-qiang-coms-architecture;
    &I-D.draft-ietf-spring-segment-routing-mpls;
    &I-D.draft-ietf-6man-segment-routing-header;
    &I-D.draft-ietf-sfc-hierarchical;
-->
    &I-D.draft-defoy-coms-subnet-interconnection;
    &I-D.draft-homma-nfvrg-slice-gateway;

      
       <reference anchor='TS.28.530-3GPP'  target="http://ftp.3gpp.org//Specs/archive/28_series/28.530/28530-100.zip">
        <front>
        <title>3GPP TS 28.530 (V1.0.0): Management and orchestration of networks and network slicing; Concepts,
               use cases and requirements (work in progress)</title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="June" year="2018"/>
        </front>
      </reference>
      
      <reference anchor='NGMN-5G-White-Paper'
       target='https://www.ngmn.org/5g-white-paper/5g-white-paper.html'>
        <front>
        <title>NGMN 5G White Paper</title>
        <author>
        <organization>NGMN</organization>
        </author>
        <date month="February" year="2015"/>
        </front>
      </reference>

      <reference anchor='TS.28.541-3GPP'  target="http://www.3gpp.org/ftp//Specs/archive/28_series/28.541/28541-f01.zip">
        <front>
        <title>3GPP TS 28.541 (V15.1.0): 5G Netowkr Resource Model (NRM); Stage 2 and stage 3 (Release 15)
        </title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="June" year="2018"/>
        </front>
      </reference>

       <reference anchor='TS.28.801-3GPP'  target="http://www.3gpp.org/ftp//Specs/archive/28_series/28.801/28801-f10.zip">
        <front>
        <title>3GPP TS 28.801 (V15.1.0): Study on Management and Orchestration of Network Slicing for next generation network (Release 15)
        </title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="June" year="2018"/>
        </front>
      </reference>
    </references>


  
  </back>
</rfc>